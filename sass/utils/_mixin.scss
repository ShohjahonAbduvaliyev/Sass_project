@mixin xs {
   @media (min-width: map-get($breakpoints, xs)) {
    @content;
  }
}
@mixin sm {
  @media (min-width: map-get($breakpoints, sm)) {
   @content;
 }
}
@mixin  md {
  @media (min-width: map-get($breakpoints, md)) {
   @content;
 }
}
@mixin lg {
  @media (min-width: map-get($breakpoints, lg)) {
   @content;
 }
}
@mixin xl {
  @media (min-width: map-get($breakpoints, xl)) {
   @content;
 }
}
@mixin xxl {
  @media (min-width: map-get($breakpoints, xxl)) {
   @content;
 }
}


@mixin breakpoint($bp: 0) {
  @media (min-width: $bp) {
    @content;
  }
  
}
// container-m is Responsive 
.container-m {
  @include xs {
    width: 100%;
    padding-right: 1.5rem;
    padding-left: 1.5rem;
  }
  @include sm {
    width:calc(57.6rem - 3.6rem);
    margin-left: 1.8rem;
    margin-right: 1.8rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  @include md {
    width:calc(76.8rem - 4.8rem);
    margin-left: 2.4rem;
    margin-right: 2.4rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  @include lg {
    width:calc(99.2rem - 3.2rem);
    margin-left: 1.6rem;
    margin-right: 1.6rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  @include xl {
    width: calc(120rem - 6rem);
    margin-left: 3rem;
    margin-right: 3rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  @include xxl {
      width: calc(140rem - 30rem);
      margin-left: 15rem;
      margin-right: 15rem;
      padding-left: 1.5rem;
      padding-right: 1.5rem;
  }


}
// end of container-m responsive
.container {
  @include xs {
    width: 100%;
    padding-right: 1.5rem;
    padding-left: 1.5rem;
  }
}
.container-sm {
  @include sm {
    width:calc(57.6rem - 3.6rem);
    margin-left: 1.8rem;
    margin-right: 1.8rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}
.container-md {
  @include md {
    width:calc(76.8rem - 4.8rem);
    margin-left: 2.4rem;
    margin-right: 2.4rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}
.container-lg {
  @include lg {
    width:calc(99.2rem - 3.2rem);
    margin-left: 1.6rem;
    margin-right: 1.6rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}
.container-xl {
  @include xl {
    width: calc(120rem - 6rem);
    margin-left: 3rem;
    margin-right: 3rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}
.container-xxl {
  @include xxl {
    width: calc(140rem - 30rem);
    margin-left: 15rem;
    margin-right: 15rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}


@mixin box {
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  min-width: auto;
  min-height: auto;
}
@mixin flexbox($fd: row, $jc: flex-start, $ai: stretch) {
  display: flex;
  flex-direction: $fd;
  justify-content: $jc;
  align-items: $ai;
}

@mixin caret-down {
  border-top: $caret-width solid;
  border-right: $caret-width solid transparent;
  border-bottom: 0;
  border-left: $caret-width solid transparent;
}

@mixin caret-up {
  border-top: 0;
  border-right: $caret-width solid transparent;
  border-bottom: $caret-width solid;
  border-left: $caret-width solid transparent;
}

@mixin caret-end {
  border-top: $caret-width solid transparent;
  border-right: 0;
  border-bottom: $caret-width solid transparent;
  border-left: $caret-width solid;
}

@mixin caret-start {
  border-top: $caret-width solid transparent;
  border-right: $caret-width solid;
  border-bottom: $caret-width solid transparent;
}

@mixin caret($direction: down) {
  @if $enable-caret {
    &::after {
      display: inline-block;
      margin-left: $caret-spacing;
      vertical-align: $caret-vertical-align;
      content: "";
      @if $direction == down {
        @include caret-down();
      } @else if $direction == up {
        @include caret-up();
      } @else if $direction == end {
        @include caret-end();
      }
    }

    @if $direction == start {
      &::after {
        display: none;
      }

      &::before {
        display: inline-block;
        margin-right: $caret-spacing;
        vertical-align: $caret-vertical-align;
        content: "";
        @include caret-start();
      }
    }

    &:empty::after {
      margin-left: 0;
    }
  }
}
